expname: garmnerf_debug #garmnerf_masksegm_exp_p_a_dirproj_mine

# device_ids: [0]     # single gpu           ; run on specified GPU
# device_ids: [1, 0]  # DP                   ; run on specified GPU
device_ids: -1        # single GPU / DP / DDP; run on all available GPUs;

data:
  type: 'MviewTemporalSMPL'
  batch_size: 1       # one batch, one image
  data_dir: /ssd3/swheo/db/ZJU_MOCAP/LightStage
  #cam_file: 'cameras.npz'
  subjects: ['363']
  train_views: [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
  #[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23] ZJU_mocap
  test_views: [3, 9]
  downscale: 1        # downscale image for training
  pin_memory: True
#  num_workers: 4
  N_rays: 512          # 512 N_rays for training
  val_rayschunk: 2048  # 2048 N_rays for validation
  val_downscale: 2     # downscale image for validation

  scale_radius: 3.0   # scale the dataset's all camera to be within this radius
  select_frame: 'uniform' # 'uniform' : uniform interval, 'rand' : randomly choose
  num_frame: -878 #1 #300      # maximum number of frames to be used #default 150

  smpl_type: 'smpl'
  uv_size: 128 #128
  smpl_feat: 'none' #'pose'

model:
  framework: GarmentNerf
  input_type: 'dispproj' #'xyz', 'uvh', 'tframe', 'invskin', 'directproj', 'dispproj'
  W_idG_feat: 0 #32
  W_idC_feat: 0 #32
  W_idS_feat: 0 #32
  use_cbfeat: False
  use_idfeat: False
  use_segm : True
  decoder:
#    input_ch: 5 # uv / x-p
#    input_ch: 3 # uv / x-p
    obj_bounding_radius: 3.0 #1
    # W_geo_feat: 256 #Default
    # speed_factor: 1.0 #Default
    variance_init: 0.05
    use_outside_nerf: False
    # upsampling related
    upsample_algo: official_solution   # [direct_use, direct_more, official_solution]
    # N_nograd_samples: 2048  # config for upsampling using 'direct_more'
    N_upsample_iters: 4     # config for upsampling using 'official_solution'
    N_outside: 32       # number of outside NeRF++ points

    ## Original Arch.
    surface:
      D: 8
      W: 256 #512
      W_up: []
      skips: [4]
      featcats: [4]
      radius_init: 0.5
      embed_multires: 6 #6

    radiance:
      D: 4
      W: 256
      W_up: [] #[0,1]
      skips: []
      embed_multires: -1
      embed_multires_view: 4  # as in the NeuS official implementaion

    segmentation:
      D: 3 # Use less depth than radiance
      W: 256
      W_up: []# [0,1]
      skips: []
      embed_multires: -1
      use_view_dirs: False
      output_dim: 4 # 4 classes (Bkg, Naked, Upper, Lower)

  canonicalbody:
    layername: 'UnetNoCond5DS' #default
    output_nc: 64

  identityfeat:
    layername: 'GeomConvLayers' #default


training:
  # Pretrain
  lr_pretrain: 5.0e-4 #5.0e-4
  maxiter_pretrain: 5000 #5000

  lr: 5.0e-4
  lr_idfeat: 5.0e-4

  speed_factor: 10.0    # NOTE: unexpectedly, this is very important. setting to 1.0 will cause some of the DTU instances can not converge correctly.
  jittered: True        # Jittered ray sampling using uniform distribution
  sample_maskonly: False
  # neus
  with_mask: True
  w_eikonal: 0.1 #0.1
  w_mask: 0.1
  w_seg : 1.0 # From Semantic_NeRF

  log_root_dir: "logs"
  clip_grad: False
  # lr decay
  scheduler:
    type: warmupcosine
    warmup_steps: 5000 # unit: itertation steps
#    type: exponential_step
#    min_factor: 0.1

  # num_epochs: 50000
  num_iters: 300000 # 300k

  ckpt_file: null # will be read by python as None
  ckpt_ignore_keys: []     # only change if you want to drop certain keys in the saved checkpionts.
  ckpt_only_use_keys: null # only change if you want to only use certain keys in the saved checkpionts.

  monitoring: tensorboard

  i_save: 900       # unit: seconds
  i_backup: 50000   # unit: itertation steps

  i_val: 500
  i_val_mesh: 10000
